// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.ibm.com/mbg-agent/pkg/protocol";

package protocol;

/***** The expose service definition. *****/
service Expose {
    // Sends a expose message
    rpc ExposeCmd (ExposeRequest) returns (ExposeReply) {}
}

// The request message for exposing a service.
message ExposeRequest {
	string Id     = 1;
	string Ip     = 2;
	string Domain = 3;
    string MbgID  = 4;
}

// The response message for exposing a service
message ExposeReply {
    string message = 1;
}


/***** The connect service definition. *****/
service Connect {
    // Sends a connect message
    rpc ConnectCmd (ConnectRequest) returns (ConnectReply) {}
}

// The request message for connecting services.
message ConnectRequest {
    string Id     = 1;
	string IdDest = 2;
	string Policy = 3;
}

// The response message for connecting services
message ConnectReply {
    string message     = 1;
    string connectType = 2;
    string connectDest = 3;
}

/***** The Disconnect service definition. *****/
service Disconnect {
    // Sends a connect message
    rpc DisconnectCmd (DisconnectRequest) returns (DisconnectReply) {}
}

// The request message for disconnecting an existing service connection.
message DisconnectRequest {
    string Id     = 1;
    string IdDest = 2;
}

// The response message for disconnecting an existing service connection.
message DisconnectReply {
    string message     = 1;
}

/***** The hello service definition. *****/
service Hello {
  // Sends a Hello message
  rpc HelloCmd (HelloRequest) returns (HelloReply) {}
}

// The request message for exposing a service.
message HelloRequest {
	string Id     = 1;
	string Ip     = 2;
    string Cport  = 3;
}

// The response message for exposing a service
message HelloReply {
  string message = 1;
}
